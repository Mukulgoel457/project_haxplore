{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\project_haxplore\\\\src\\\\App.js\";\n//import { useEffect } from \"react\";\n/* import {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from \"react-router-dom\"; */\n/* import SignUp from \"./pages/SignUpfront_end\";\nimport RegisterPage from \"./pages/register\";\n\nimport { Routes, Route } from 'react-router-dom';s */\nimport LoginPage from \"./pages/login_integrate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  /*  const action = useNavigationType();\n   const location = useLocation();\n   const pathname = location.pathname;\n    useEffect(() => {\n     if (action !== \"POP\") {\n       window.scrollTo(0, 0);\n     }\n   }, [action, pathname]);\n    useEffect(() => {\n     let title = \"\";\n     let metaDescription = \"\";\n      switch (pathname) {\n       case \"/\":\n         title = \"\";\n         metaDescription = \"\";\n         break;\n     }\n      if (title) {\n       document.title = title;\n     }\n      if (metaDescription) {\n       const metaDescriptionTag = document.querySelector(\n         'head > meta[name=\"description\"]'\n       );\n       if (metaDescriptionTag) {\n         metaDescriptionTag.content = metaDescription;\n       }\n     }\n   }, [pathname]);\n  */\n  return (\n    /*#__PURE__*/\n    // <SignUp/>\n    _jsxDEV(RegisterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this)\n    //<LoginPage/>\n\n    /*{ <Routes>\n     <Route path='/' element={<LoginPage />} />\n     <Route path='/registerpage' element={<RegisterPage />} />\n     </Routes>\n      }*/\n  );\n};\n_c = App;\nexport default App;\n\n/* \n<Router>\n<Switch>\n  <Route exact path=\"/\" component={LoginPage} />\n\n\n  </Switch>\n </Router> */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["LoginPage","jsxDEV","_jsxDEV","App","RegisterPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/project_haxplore/src/App.js"],"sourcesContent":["//import { useEffect } from \"react\";\n/* import {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from \"react-router-dom\"; */\n/* import SignUp from \"./pages/SignUpfront_end\";\nimport RegisterPage from \"./pages/register\";\n\nimport { Routes, Route } from 'react-router-dom';s */\nimport LoginPage from \"./pages/login_integrate\";\n\nconst  App = ()=>{\n /*  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action, pathname]);\n\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n\n    if (title) {\n      document.title = title;\n    }\n\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector(\n        'head > meta[name=\"description\"]'\n      );\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n */\n  return (\n\n    // <SignUp/>\n     <RegisterPage/>\n   //<LoginPage/>\n\n  /*{ <Routes>\n   <Route path='/' element={<LoginPage />} />\n   <Route path='/registerpage' element={<RegisterPage />} />\n   </Routes>\n \n  }*/\n \n  );\n}\nexport default App;\n\n/* \n<Router>\n<Switch>\n  <Route exact path=\"/\" component={LoginPage} />\n\n\n  </Switch>\n </Router> */"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAOC,GAAG,GAAGA,CAAA,KAAI;EAChB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAME;IAAA;IAEE;IACCD,OAAA,CAACE,YAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;IAChB;;IAED;AACF;AACA;AACA;AACA;EAJE;AAQF,CAAC;AAAAC,EAAA,GAlDMN,GAAG;AAmDV,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}